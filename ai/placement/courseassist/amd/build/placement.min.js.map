{"version":3,"file":"placement.min.js","sources":["../src/placement.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to load and render the tools for the AI assist plugin.\n *\n * @module     aiplacement_courseassist/placement\n * @copyright  2024 Huong Nguyen <huongnv13@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPolicyStatus, setPolicyStatus} from 'core/ai/policy';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport 'core/copy_to_clipboard';\nimport Notification from 'core/notification';\nimport Selectors from 'aiplacement_courseassist/selectors';\n\nconst AICourseAssist = class {\n\n    /**\n     * The user ID.\n     * @type {Integer}\n     */\n    userId;\n    /**\n     * The context ID.\n     * @type {Integer}\n     */\n    contextId;\n\n    /**\n     * Constructor.\n     * @param {Integer} userId The user ID.\n     * @param {Integer} contextId The context ID.\n     */\n    constructor(userId, contextId) {\n        this.userId = userId;\n        this.contextId = contextId;\n\n        this.aiDrawerElement = document.querySelector(Selectors.ELEMENTS.AIDRAWER);\n        this.aiDrawerBodyElement = document.querySelector(Selectors.ELEMENTS.AIDRAWER_BODY);\n        this.pageElement = document.querySelector(Selectors.ELEMENTS.PAGE);\n\n        this.registerEventListeners();\n    }\n\n    /**\n     * Register event listeners.\n     */\n    registerEventListeners() {\n        document.addEventListener('click', async(e) => {\n            const summariseAction = e.target.closest(Selectors.ACTIONS.SUMMARY);\n            if (summariseAction) {\n                e.preventDefault();\n                this.toggleAIDrawer();\n                const isPolicyAccepted = await this.isPolicyAccepted();\n                if (!isPolicyAccepted) {\n                    // Display policy.\n                    this.displayPolicy();\n                    return;\n                }\n                // Display summary.\n                this.displaySummary();\n            }\n        });\n    }\n\n    /**\n     * Register event listeners for the policy.\n     */\n    registerPolicyEventListeners() {\n        const acceptAction = document.querySelector(Selectors.ACTIONS.ACCEPT);\n        const declineAction = document.querySelector(Selectors.ACTIONS.DECLINE);\n        acceptAction.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.acceptPolicy().then(() => {\n                return this.displaySummary();\n            }).catch(Notification.exception);\n        });\n        declineAction.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.closeAIDrawer();\n        });\n    }\n\n    /**\n     * Register event listeners for the error.\n     */\n    registerErrorEventListeners() {\n        const retryAction = document.querySelector(Selectors.ACTIONS.RETRY);\n        retryAction.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.aiDrawerBodyElement.dataset.hasdata = '0';\n            this.displaySummary();\n        });\n    }\n\n    /**\n     * Register event listeners for the response.\n     */\n    registerResponseEventListeners() {\n        const regenerateAction = document.querySelector(Selectors.ACTIONS.REGENERATE);\n        regenerateAction.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.aiDrawerBodyElement.dataset.hasdata = '0';\n            this.displaySummary();\n        });\n    }\n\n    registerLoadingEventListeners() {\n        const cancelAction = document.querySelector(Selectors.ACTIONS.CANCEL);\n        cancelAction.addEventListener('click', (e) => {\n            e.preventDefault();\n            this.setRequestCancelled();\n            this.toggleAIDrawer();\n        });\n    }\n\n    /**\n     * Check if the AI drawer is open.\n     * @return {boolean} True if the AI drawer is open, false otherwise.\n     */\n    isAIDrawerOpen() {\n        return this.aiDrawerElement.classList.contains('show');\n    }\n\n    /**\n     * Check if the request is cancelled.\n     * @return {boolean} True if the request is cancelled, false otherwise.\n     */\n    isRequestCancelled() {\n        return this.aiDrawerBodyElement.dataset.cancelled === '1';\n    }\n\n    setRequestCancelled() {\n        this.aiDrawerBodyElement.dataset.cancelled = '1';\n    }\n\n    /**\n     * Open the AI drawer.\n     */\n    openAIDrawer() {\n        this.aiDrawerElement.classList.add('show');\n        if (!this.pageElement.classList.contains('show-drawer-right')) {\n            this.addPadding();\n        }\n    }\n\n    /**\n     * Close the AI drawer.\n     */\n    closeAIDrawer() {\n        this.aiDrawerElement.classList.remove('show');\n        if (this.pageElement.classList.contains('show-drawer-right') && this.aiDrawerBodyElement.dataset.removepadding === '1') {\n            this.removePadding();\n        }\n        // Focus back to the summary button.\n        document.querySelector(Selectors.ACTIONS.SUMMARY).focus();\n    }\n\n    /**\n     * Toggle the AI drawer.\n     */\n    toggleAIDrawer() {\n        if (this.isAIDrawerOpen()) {\n            this.closeAIDrawer();\n        } else {\n            this.openAIDrawer();\n        }\n    }\n\n    /**\n     * Add padding to the page to make space for the AI drawer.\n     */\n    addPadding() {\n        this.pageElement.classList.add('show-drawer-right');\n        this.aiDrawerBodyElement.dataset.removepadding = '1';\n    }\n\n    /**\n     * Remove padding from the page.\n     */\n    removePadding() {\n        this.pageElement.classList.remove('show-drawer-right');\n        this.aiDrawerBodyElement.dataset.removepadding = '0';\n    }\n\n    /**\n     * Check if the policy is accepted.\n     * @return {bool} True if the policy is accepted, false otherwise.\n     */\n    async isPolicyAccepted() {\n        const checkPolicy = await getPolicyStatus(this.userId, this.contextId);\n        return checkPolicy.status;\n    }\n\n    /**\n     * Accept the policy.\n     * @return {Promise<Object>}\n     */\n    async acceptPolicy() {\n        return await setPolicyStatus(this.userId, this.contextId);\n    }\n\n    /**\n     * Check if the AI drawer has generated content or not.\n     * @return {boolean} True if the AI drawer has generated content, false otherwise.\n     */\n    hasGeneratedContent() {\n        return this.aiDrawerBodyElement.dataset.hasdata === '1';\n    }\n\n    /**\n     * Display the policy.\n     */\n    displayPolicy() {\n        Templates.render('aiplacement_courseassist/policy', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerPolicyEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the loading spinner.\n     */\n    displayLoading() {\n        Templates.render('aiplacement_courseassist/loading', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerLoadingEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the summary.\n     */\n    async displaySummary() {\n        if (!this.hasGeneratedContent()) {\n            this.displayLoading();\n            const request = {\n                methodname: 'aiplacement_courseassist_summarise_text',\n                args: {\n                    contextid: this.contextId,\n                    prompttext: this.getTextContent(),\n                }\n            };\n            try {\n                const responseObj = await Ajax.call([request])[0];\n                if (responseObj.error) {\n                    window.console.log(responseObj.error);\n                    this.displayError();\n                    return;\n                } else {\n                    if (!this.isRequestCancelled()) {\n                        window.console.log(responseObj);\n                        this.displayResponse(responseObj.generatedcontent);\n                        return;\n                    } else {\n                        this.aiDrawerBodyElement.dataset.cancelled = '0';\n                    }\n                }\n            } catch (error) {\n                window.console.log(error);\n            }\n        }\n    }\n\n    /**\n     * Display the response.\n     * @param {String} content The content to display.\n     */\n    displayResponse(content) {\n        Templates.render('aiplacement_courseassist/response', {content: content}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.aiDrawerBodyElement.dataset.hasdata = '1';\n            this.registerResponseEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Display the error.\n     */\n    displayError() {\n        Templates.render('aiplacement_courseassist/error', {}).then((html) => {\n            this.aiDrawerBodyElement.innerHTML = html;\n            this.registerErrorEventListeners();\n            return;\n        }).catch(Notification.exception);\n    }\n\n    /**\n     * Get the text content of the main region.\n     * @return {String} The text content.\n     */\n    getTextContent() {\n        const mainRegion = document.querySelector(Selectors.ELEMENTS.MAIN_REGION);\n        return mainRegion.innerText || mainRegion.textContent;\n    }\n};\n\nexport default AICourseAssist;\n"],"names":["constructor","userId","contextId","aiDrawerElement","document","querySelector","Selectors","ELEMENTS","AIDRAWER","aiDrawerBodyElement","AIDRAWER_BODY","pageElement","PAGE","registerEventListeners","addEventListener","async","e","target","closest","ACTIONS","SUMMARY","preventDefault","toggleAIDrawer","this","isPolicyAccepted","displayPolicy","displaySummary","registerPolicyEventListeners","acceptAction","ACCEPT","declineAction","DECLINE","acceptPolicy","then","catch","Notification","exception","closeAIDrawer","registerErrorEventListeners","RETRY","dataset","hasdata","registerResponseEventListeners","REGENERATE","registerLoadingEventListeners","CANCEL","setRequestCancelled","isAIDrawerOpen","classList","contains","isRequestCancelled","cancelled","openAIDrawer","add","addPadding","remove","removepadding","removePadding","focus","status","hasGeneratedContent","render","html","innerHTML","displayLoading","request","methodname","args","contextid","prompttext","getTextContent","responseObj","Ajax","call","error","window","console","log","displayError","displayResponse","generatedcontent","content","mainRegion","MAIN_REGION","innerText","textContent"],"mappings":"wxBA8BuB,MAkBnBA,YAAYC,OAAQC,+FACXD,OAASA,YACTC,UAAYA,eAEZC,gBAAkBC,SAASC,cAAcC,mBAAUC,SAASC,eAC5DC,oBAAsBL,SAASC,cAAcC,mBAAUC,SAASG,oBAChEC,YAAcP,SAASC,cAAcC,mBAAUC,SAASK,WAExDC,yBAMTA,yBACIT,SAASU,iBAAiB,SAASC,MAAAA,OACPC,EAAEC,OAAOC,QAAQZ,mBAAUa,QAAQC,SACtC,CACjBJ,EAAEK,sBACGC,2BAC0BC,KAAKC,oCAG3BC,qBAIJC,qBAQjBC,qCACUC,aAAexB,SAASC,cAAcC,mBAAUa,QAAQU,QACxDC,cAAgB1B,SAASC,cAAcC,mBAAUa,QAAQY,SAC/DH,aAAad,iBAAiB,SAAUE,IACpCA,EAAEK,sBACGW,eAAeC,MAAK,IACdV,KAAKG,mBACbQ,MAAMC,sBAAaC,cAE1BN,cAAchB,iBAAiB,SAAUE,IACrCA,EAAEK,sBACGgB,mBAObC,8BACwBlC,SAASC,cAAcC,mBAAUa,QAAQoB,OACjDzB,iBAAiB,SAAUE,IACnCA,EAAEK,sBACGZ,oBAAoB+B,QAAQC,QAAU,SACtCf,oBAObgB,iCAC6BtC,SAASC,cAAcC,mBAAUa,QAAQwB,YACjD7B,iBAAiB,SAAUE,IACxCA,EAAEK,sBACGZ,oBAAoB+B,QAAQC,QAAU,SACtCf,oBAIbkB,gCACyBxC,SAASC,cAAcC,mBAAUa,QAAQ0B,QACjD/B,iBAAiB,SAAUE,IACpCA,EAAEK,sBACGyB,2BACAxB,oBAQbyB,wBACWxB,KAAKpB,gBAAgB6C,UAAUC,SAAS,QAOnDC,2BAC0D,MAA/C3B,KAAKd,oBAAoB+B,QAAQW,UAG5CL,2BACSrC,oBAAoB+B,QAAQW,UAAY,IAMjDC,oBACSjD,gBAAgB6C,UAAUK,IAAI,QAC9B9B,KAAKZ,YAAYqC,UAAUC,SAAS,2BAChCK,aAObjB,qBACSlC,gBAAgB6C,UAAUO,OAAO,QAClChC,KAAKZ,YAAYqC,UAAUC,SAAS,sBAA2E,MAAnD1B,KAAKd,oBAAoB+B,QAAQgB,oBACxFC,gBAGTrD,SAASC,cAAcC,mBAAUa,QAAQC,SAASsC,QAMtDpC,iBACQC,KAAKwB,sBACAV,qBAEAe,eAObE,kBACS3C,YAAYqC,UAAUK,IAAI,0BAC1B5C,oBAAoB+B,QAAQgB,cAAgB,IAMrDC,qBACS9C,YAAYqC,UAAUO,OAAO,0BAC7B9C,oBAAoB+B,QAAQgB,cAAgB,0CAQvB,2BAAgBjC,KAAKtB,OAAQsB,KAAKrB,YACzCyD,yCAQN,2BAAgBpC,KAAKtB,OAAQsB,KAAKrB,WAOnD0D,4BACwD,MAA7CrC,KAAKd,oBAAoB+B,QAAQC,QAM5ChB,mCACcoC,OAAO,kCAAmC,IAAI5B,MAAM6B,YACrDrD,oBAAoBsD,UAAYD,UAChCnC,kCAENO,MAAMC,sBAAaC,WAM1B4B,oCACcH,OAAO,mCAAoC,IAAI5B,MAAM6B,YACtDrD,oBAAoBsD,UAAYD,UAChClB,mCAENV,MAAMC,sBAAaC,sCAOjBb,KAAKqC,sBAAuB,MACxBI,uBACCC,QAAU,CACZC,WAAY,0CACZC,KAAM,CACFC,UAAW7C,KAAKrB,UAChBmE,WAAY9C,KAAK+C,6BAIfC,kBAAoBC,cAAKC,KAAK,CAACR,UAAU,MAC3CM,YAAYG,aACZC,OAAOC,QAAQC,IAAIN,YAAYG,iBAC1BI,mBAGAvD,KAAK2B,4BACNyB,OAAOC,QAAQC,IAAIN,uBACdQ,gBAAgBR,YAAYS,uBAG5BvE,oBAAoB+B,QAAQW,UAAY,IAGvD,MAAOuB,OACLC,OAAOC,QAAQC,IAAIH,SAS/BK,gBAAgBE,4BACFpB,OAAO,oCAAqC,CAACoB,QAASA,UAAUhD,MAAM6B,YACvErD,oBAAoBsD,UAAYD,UAChCrD,oBAAoB+B,QAAQC,QAAU,SACtCC,oCAENR,MAAMC,sBAAaC,WAM1B0C,kCACcjB,OAAO,iCAAkC,IAAI5B,MAAM6B,YACpDrD,oBAAoBsD,UAAYD,UAChCxB,iCAENJ,MAAMC,sBAAaC,WAO1BkC,uBACUY,WAAa9E,SAASC,cAAcC,mBAAUC,SAAS4E,oBACtDD,WAAWE,WAAaF,WAAWG"}