{"version":3,"file":"policy.min.js","sources":["../../src/ai/policy.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AI Subsystem policy functions.\n *\n * @module     core/ai/policy\n * @copyright   2024 Matt Porritt <matt.porritt@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      4.5\n */\n\nimport Ajax from 'core/ajax';\n\n/**\n * Get the policy status for a user.\n *\n * @param {int} userId The user ID.\n * @param {int} contextId Context id request is made in.\n * @return {array} The policy status.\n */\nexport const getPolicyStatus = async(userId, contextId) => {\n    const request = {\n        methodname: 'core_ai_get_policy_status',\n        args: {userid: userId, contextid: contextId},\n    };\n\n    const response = await Ajax.call([request]);\n    return response[0];\n};\n\n/**\n * Set the policy status for a user.\n * @param {int} userId The user ID.\n * @param {int} contextId Context id request is made in.\n * @return {promise} Promise resolved with the policy set status.\n */\nexport const setPolicyStatus = async(userId, contextId) => {\n    const request = {\n        methodname: 'core_ai_set_policy_status',\n        args: {userid: userId, contextid: contextId},\n    };\n\n    const response = await Ajax.call([request]);\n    return response[0];\n};\n"],"names":["async","userId","contextId","request","methodname","args","userid","contextid","Ajax","call"],"mappings":";;;;;;;;mMAiC+BA,MAAMC,OAAQC,mBACnCC,QAAU,CACZC,WAAY,4BACZC,KAAM,CAACC,OAAQL,OAAQM,UAAWL,yBAGfM,cAAKC,KAAK,CAACN,WAClB,6BASWH,MAAMC,OAAQC,mBACnCC,QAAU,CACZC,WAAY,4BACZC,KAAM,CAACC,OAAQL,OAAQM,UAAWL,yBAGfM,cAAKC,KAAK,CAACN,WAClB"}